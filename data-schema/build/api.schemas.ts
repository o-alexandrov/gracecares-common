/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * gracecares.ai API
 * RESTful service for gracecares.ai website
 * OpenAPI spec version: 1.0.0
 */
/**
 * Timestamp in days
 */
export type CreatedDays = number;

/**
 * Timestamp in hours
 */
export type CreatedHours = number;

/**
 * Timestamp in seconds
 */
export type CreatedSeconds = number;

/**
 * Email conforming to RFC 5322
 * @pattern (?=^.{5,}$)(?=^.{0,254}$)(?=.*@.*)(?=^((([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+")))@.*$)(?=.*@((\[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\])|(([a-zA-Z\-\d]+\.)+[a-zA-Z]{2,}))$)
 */
export type Email = string;

/**
 * Error message
 */
export type Error = string;

/**
 * Timestamp in days
 */
export type FromDays = number;

/**
 * Timestamp in hours
 */
export type FromHours = number;

/**
 * Timestamp in seconds
 */
export type FromSeconds = number;

/**
 * A custom unique identifier, generated by our service
 * @pattern (?=^.{21}$)(?=^[\w~.-]+$)
 */
export type Id = string;

export interface ItemUser {
  id: Id;
  created: CreatedSeconds;
  username: Username;
  name?: Name;
  email?: Email;
  noP?: NoP;
  /** Represents when the user will be automatically removed.


A user can request account & data removal
- when we receive such request, our backend adds `ttl` attribute for automated removal a week later */
  ttl?: TtlHours;
  notifications?: Notifications;
}

/**
 * Number of items per page.
- maximum is `100` (but we won't throw an error, if you request more)
 */
export type Limit = number;

/**
 * Display name
- (doesn't have to be unique)
 * @pattern (?=^.{1,}$)(?=^.{0,50}$)
 */
export type Name = string;

/**
 * Indicator whether a user has no password
 */
export type NoP = boolean;

/**
 * Number of unread notifications
 */
export type Notifications = number;

/**
 * Directions (cursor) for the backend to select the next page data.
- in other words, this attribute serves for pagination
- the values are separated by `,`
 */
export type Page = string;

/**
 * A secret word or phrase used to log in (We encrypt the value)
 * @pattern (?=^.{6,}$)(?=^.{0,64}$)
 */
export type Password = string;

/**
 * A new password value (We encrypt the value)
 * @pattern (?=^.{6,}$)(?=^.{0,64}$)
 */
export type PasswordNew = string;

/**
 * Timestamp in days
 */
export type ToDays = number;

/**
 * Timestamp in hours
 */
export type ToHours = number;

/**
 * Timestamp in seconds
 */
export type ToSeconds = number;

/**
 * Request `ttl` to be added to the `item`
 */
export type TtlAdd = boolean;

/**
 * Timestamp in days
 */
export type TtlDays = number;

/**
 * Timestamp in hours
 */
export type TtlHours = number;

/**
 * Timestamp in seconds
 */
export type TtlSeconds = number;

/**
 * Timestamp in days
 */
export type UpdatedDays = number;

/**
 * Timestamp in hours
 */
export type UpdatedHours = number;

/**
 * Timestamp in seconds
 */
export type UpdatedSeconds = number;

/**
 * A custom unique identifier, generated by our service
 * @pattern (?=^.{21}$)(?=^[\w~.-]+$)
 */
export type UserIDGeneric = string;

/**
 * Must be unique. `john` & `John` are considered the same due to case-insensitivity.

A user can still save their username with uppercase letters, but the case will be preserved `only` for the display purposes.

`username` exists for/in:
- URLs
- mentions
- search
- etc.
 * @pattern (?=^.{1,}$)(?=^.{0,30}$)(?=^[\w\-.]+$)
 */
export type Username = string;

